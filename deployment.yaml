resources:
  # Firewall rules
  - name: msd-api-gateway
    type: compute.v1.firewall
    properties:
      network: https://www.googleapis.com/compute/v1/projects/isis-2503-talleres-415314/global/networks/default
      priority: 1000
      direction: INGRESS
      sourceRanges: 
        - 0.0.0.0/0
      targetTags:
        - msd-api-gateway
      allowed:
        - IPProtocol: TCP
          ports: 
            - 8000

  - name: msd-services-apps
    type: compute.v1.firewall
    properties:
      network: https://www.googleapis.com/compute/v1/projects/isis-2503-talleres-415314/global/networks/default
      priority: 1000
      direction: INGRESS
      sourceTags: 
        - msd-api-gateway
      targetTags:
        - msd-services-firewall
      allowed:
        - IPProtocol: TCP
          ports: 
            - 8080

  - name: msd-services-apps-web
    type: compute.v1.firewall
    properties:
      network: https://www.googleapis.com/compute/v1/projects/isis-2503-talleres-415314/global/networks/default
      priority: 1000
      direction: INGRESS
      sourceRanges: 
        - 0.0.0.0/0
      targetTags:
        - msd-services-firewall
      allowed:
        - IPProtocol: TCP
          ports: 
            - 8080

  - name: msd-service-db
    type: compute.v1.firewall
    properties:
      network: https://www.googleapis.com/compute/v1/projects/isis-2503-talleres-415314/global/networks/default
      priority: 1000
      direction: INGRESS
      sourceTags: 
        - msd-services-firewall
      targetTags:
        - msd-service-db
      allowed:
        - IPProtocol: TCP
          ports: 
            - 5432

    # ********************************** Kong instance **********************************
  - name: msd-kong-instance
    type: compute.v1.instance
    properties:
      zone: us-central1-a
      machineType: https://www.googleapis.com/compute/v1/projects/microservicios-423716/zones/us-central1-a/machineTypes/e2-micro
      disks:
      - deviceName: boot
        type: PERSISTENT
        boot: true
        autoDelete: true
        initializeParams:
          sourceImage: https://www.googleapis.com/compute/v1/projects/cos-cloud/global/images/cos-101-17162-463-8
      networkInterfaces:
      - network: https://www.googleapis.com/compute/v1/projects/microservicios-423716/global/networks/default
        networkIP: 10.128.0.81
        accessConfigs:
        - name: External NAT
          type: ONE_TO_ONE_NAT
      tags:
        items: 
        - msd-api-gateway
      metadata:
        items:
        - key: startup-script
          value: |
            #!/bin/bash
            sudo mkdir /home/labs
            cd /home/labs
            sudo git clone https://github.com/DannyC666/BankAndesCustomers.git
            cd BankAndesCustomers
            docker network create kong-net
            docker run -d --name kong --network=kong-net --restart=always \
            -v "$(pwd):/kong/declarative/" -e "KONG_DATABASE=off" \
            -e "KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yaml" \
            -p 8000:8000 kong/kong-gateway


  # ********************************** Database products instance **********************************
  - name: msd-products-db
    type: compute.v1.instance
    properties:
      zone: us-central1-b
      machineType: https://www.googleapis.com/compute/v1/projects/isis-2503-talleres-415314/zones/us-central1-b/machineTypes/e2-micro
      disks:
        - deviceName: boot
          type: PERSISTENT
          boot: true
          autoDelete: true
          initializeParams:
            sourceImage: https://www.googleapis.com/compute/v1/projects/cos-cloud/global/images/cos-101-17162-463-8
      networkInterfaces:
        - network: https://www.googleapis.com/compute/v1/projects/isis-2503-talleres-415314/global/networks/default
          networkIP: 10.128.0.82
          accessConfigs:
            - name: External NAT
              type: ONE_TO_ONE_NAT
      tags:
        items: 
          - msd-service-db
      metadata:
        items:
          - key: startup-script
            value: |
              #!/bin/bash
              docker run --restart=always -d -e POSTGRES_USER=products_user -e POSTGRES_DB=products_db -e POSTGRES_PASSWORD=isis2503 -p 5432:5432 --name products-db postgres



  # ********************************** Service products  instance ********************************** 
  - name: msd-products-ms
    type: compute.v1.instance
    properties:
      zone: us-central1-b
      machineType: https://www.googleapis.com/compute/v1/projects/isis-2503-talleres-415314/zones/us-central1-b/machineTypes/e2-micro
      disks:
        - deviceName: boot
          type: PERSISTENT
          boot: true
          autoDelete: true
          initializeParams:
            sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20240307b
      networkInterfaces:
        - network: https://www.googleapis.com/compute/v1/projects/isis-2503-talleres-415314/global/networks/default
          networkIP: 10.128.0.83
          accessConfigs:
            - name: External NAT
              type: ONE_TO_ONE_NAT
      tags:
        items: 
          - msd-services-firewall
      metadata:
        items:
          - key: startup-script
            value: |
              #!/bin/bash
              sudo apt-get update
              sudo apt-get install -y git python3-pip
              sudo mkdir -p /home/labs
              cd /home/labs
              sudo git clone https://github.com/Yuli4n/MicroServiceFlask.git
              cd MicroServiceFlask/ProductManager
              sudo pip3 install -r requirements.txt

 # ********************************** Service customers  instance *********************************
  - name: msd-customers-ms
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/microservicios-423716/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20240307b
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/microservicios-423716/global/networks/default
      networkIP: 10.128.0.84
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-services-firewall
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo apt install python3-pip -y
          sudo mkdir /home/labs
          cd /home/labs
          sudo git clone https://github.com/DannyC666/BankAndesCustomers.git
          cd BankAndesCustomers
          sudo pip3 install -r requirements.txt

# ********************************** Service credit instance *********************************
  - name: msd-credit-ms
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: https://www.googleapis.com/compute/v1/projects/microservicios-423716/zones/us-central1-a/machineTypes/e2-micro
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: https://www.googleapis.com/compute/v1/projects/ubuntu-os-cloud/global/images/ubuntu-2004-focal-v20240307b
    networkInterfaces:
    - network: https://www.googleapis.com/compute/v1/projects/microservicios-423716/global/networks/default
      networkIP: 10.128.0.85
      accessConfigs:
      - name: External NAT
        type: ONE_TO_ONE_NAT
    tags:
      items: 
      - msd-services-firewall
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/bash
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce
          sudo usermod -aG docker $USER
          sudo systemctl start docker
          sudo systemctl enable docker